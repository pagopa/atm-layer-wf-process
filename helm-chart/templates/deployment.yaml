apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    App: {{ .Values.deployment.name }}
  annotations:
    {{- toYaml .Values.deployment.annotations | nindent 4 }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      App: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        App: {{ .Values.deployment.name }}
        force-recreate: {{ randAlphaNum 5 | quote }}
    spec:
      serviceAccountName: {{ include "chart-1.serviceAccountName" . }}
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true 
          volumeAttributes:
            secretProviderClass: atm-layer-wf-process-secrets
      containers:
        - name: {{ .Values.deployment.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: {{ .Values.service.port }}
          imagePullPolicy: Always
          env:
            - name: PROCESS_SERVICE_LOG_LEVEL
              value: "{{ .Values.logLevel }}"
            - name: CAMUNDA_ADDRESS
              value: "{{ .Values.camundaWebUser.address }}"
            - name: PROCESS_SERVICE_ENGINE_ACCOUNT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.camundaWebUser.credentialsSecretName }}
                  key: {{ .Values.camundaWebUser.credentialsSecretKeys.username }}
            - name: PROCESS_SERVICE_ENGINE_ACCOUNT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.camundaWebUser.credentialsSecretName }}
                  key: {{ .Values.camundaWebUser.credentialsSecretKeys.password }}
          volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true

  strategy:
    type: Recreate