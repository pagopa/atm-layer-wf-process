name: Manual promote release in performance and deploy

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Which release to promote and deploy in performance:'
        type: string
        required: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: write    # This is required for actions/checkout

jobs:
  manual-promote-release-in-performance-and-deploy:
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/uat'
    strategy:
      matrix:
        environment: [performance]

    name: "manual-promote-release-in-performance-and-deploy"
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Configure uat AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          role-to-assume: ${{ secrets.UAT_IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to uat Amazon ECR
        id: login-ecr-uat
        uses: aws-actions/amazon-ecr-login@v2

      - name: Copy docker image from uat ECR
        env:
          REGISTRY: ${{ steps.login-ecr-uat.outputs.registry }}
          REPOSITORY: ${{ vars.UAT_DOCKER_IMAGE_NAME}}
          UAT_IMAGE_TAG: ${{ inputs.release }}
        run: |
          docker pull $REGISTRY/$REPOSITORY:$UAT_IMAGE_TAG

      - name: Configure performance AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          role-to-assume: ${{ secrets.PERFORMANCE_IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to performance Amazon ECR
        id: login-ecr-performance
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push docker image in performance ECR
        env:
          PERFORMANCE_REGISTRY: ${{ steps.login-ecr-performance.outputs.registry }}
          UAT_REGISTRY: ${{ steps.login-ecr-uat.outputs.registry }}
          PERFORMANCE_REPOSITORY: ${{ vars.PERFORMANCE_DOCKER_IMAGE_NAME}}
          UAT_REPOSITORY: ${{ vars.UAT_DOCKER_IMAGE_NAME}}
          PERFORMANCE_IMAGE_TAG: ${{ inputs.release }}
          UAT_IMAGE_TAG: ${{ inputs.release }}
        run: |
          docker tag $UAT_REGISTRY/$UAT_REPOSITORY:$UAT_IMAGE_TAG $PERFORMANCE_REGISTRY/$PERFORMANCE_REPOSITORY:$PERFORMANCE_IMAGE_TAG
          docker push $PERFORMANCE_REGISTRY/$PERFORMANCE_REPOSITORY:$PERFORMANCE_IMAGE_TAG

      - name: Update Kubernetes Config
        run: |
          aws eks --region ${{ vars.AWS_REGION }} update-kubeconfig --name pagopa-${{ matrix.environment }}-atm-layer-eks

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          
      - name: Upgrade Helm Chart
        run: |
          helm upgrade --install ${{ vars.PERFORMANCE_DOCKER_IMAGE_NAME }} helm-chart/ \
          --namespace pagopa \
          -f helm-chart/environments/values-${{ matrix.environment }}.yaml \
          --set image.tag=${{ inputs.release }} \
          --set image.repository=${{ steps.login-ecr-performance.outputs.registry }}/${{ vars.PERFORMANCE_DOCKER_IMAGE_NAME }} \
          --set serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=${{ secrets.SERVICEACCOUNT_IAM_ROLE }}
